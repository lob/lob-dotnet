/*
 * Lob
 *
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using lob.dotnet.Client;
using lob.dotnet.Api;
// uncomment below to import models
//using lob.dotnet.Model;

namespace lob.dotnet.Test.Api
{
    /// <summary>
    ///  Class for testing CampaignsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CampaignsApiTests : IDisposable
    {
        private CampaignsApi instance;

        public CampaignsApiTests()
        {
            instance = new CampaignsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CampaignsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CampaignsApi
            //Assert.IsType<CampaignsApi>(instance);
        }

        /// <summary>
        /// Test CampaignCreate
        /// </summary>
        [Fact]
        public void CampaignCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CampaignWritable campaignWritable = null;
            //string xLangOutput = null;
            //var response = instance.CampaignCreate(campaignWritable, xLangOutput);
            //Assert.IsType<Campaign>(response);
        }

        /// <summary>
        /// Test CampaignDelete
        /// </summary>
        [Fact]
        public void CampaignDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cmpId = null;
            //var response = instance.CampaignDelete(cmpId);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test CampaignRetrieve
        /// </summary>
        [Fact]
        public void CampaignRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cmpId = null;
            //var response = instance.CampaignRetrieve(cmpId);
            //Assert.IsType<Campaign>(response);
        }

        /// <summary>
        /// Test CampaignUpdate
        /// </summary>
        [Fact]
        public void CampaignUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cmpId = null;
            //CampaignUpdatable campaignUpdatable = null;
            //var response = instance.CampaignUpdate(cmpId, campaignUpdatable);
            //Assert.IsType<Campaign>(response);
        }

        /// <summary>
        /// Test CampaignsList
        /// </summary>
        [Fact]
        public void CampaignsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //List<string> include = null;
            //string before = null;
            //string after = null;
            //var response = instance.CampaignsList(limit, include, before, after);
            //Assert.IsType<CampaignsList>(response);
        }
    }
}
