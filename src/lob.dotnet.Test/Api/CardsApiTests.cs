/*
 * Lob
 *
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using lob.dotnet.Client;
using lob.dotnet.Api;
// uncomment below to import models
//using lob.dotnet.Model;

namespace lob.dotnet.Test.Api
{
    /// <summary>
    ///  Class for testing CardsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CardsApiTests : IDisposable
    {
        private CardsApi instance;

        public CardsApiTests()
        {
            instance = new CardsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CardsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' CardsApi
            //Assert.IsType<CardsApi>(instance);
        }

        /// <summary>
        /// Test CardCreate
        /// </summary>
        [Fact]
        public void CardCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardEditable cardEditable = null;
            //var response = instance.CardCreate(cardEditable);
            //Assert.IsType<Card>(response);
        }

        /// <summary>
        /// Test CardDelete
        /// </summary>
        [Fact]
        public void CardDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cardId = null;
            //var response = instance.CardDelete(cardId);
            //Assert.IsType<CardDeletion>(response);
        }

        /// <summary>
        /// Test CardRetrieve
        /// </summary>
        [Fact]
        public void CardRetrieveTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cardId = null;
            //var response = instance.CardRetrieve(cardId);
            //Assert.IsType<Card>(response);
        }

        /// <summary>
        /// Test CardUpdate
        /// </summary>
        [Fact]
        public void CardUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cardId = null;
            //CardUpdatable cardUpdatable = null;
            //var response = instance.CardUpdate(cardId, cardUpdatable);
            //Assert.IsType<Card>(response);
        }

        /// <summary>
        /// Test CardsList
        /// </summary>
        [Fact]
        public void CardsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //string before = null;
            //string after = null;
            //SortBy5 sortBy = null;
            //var response = instance.CardsList(limit, before, after, sortBy);
            //Assert.IsType<CardList>(response);
        }
    }
}
