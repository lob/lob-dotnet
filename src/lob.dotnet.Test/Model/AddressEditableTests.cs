/*
 * Lob
 *
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using lob.dotnet.Api;
using lob.dotnet.Model;
using lob.dotnet.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace lob.dotnet.Test.Model
{
    /// <summary>
    ///  Class for testing AddressEditable
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AddressEditableTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for AddressEditable
        //private AddressEditable instance;

        public AddressEditableTests()
        {
            // TODO uncomment below to create an instance of AddressEditable
            //instance = new AddressEditable();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AddressEditable
        /// </summary>
        [Fact]
        public void AddressEditableInstanceTest()
        {
            // TODO uncomment below to test "IsType" AddressEditable
            //Assert.IsType<AddressEditable>(instance);
        }


        /// <summary>
        /// Test the property 'AddressLine1'
        /// </summary>
        [Fact]
        public void AddressLine1Test()
        {
            // TODO unit test for the property 'AddressLine1'
        }
        /// <summary>
        /// Test the property 'AddressLine2'
        /// </summary>
        [Fact]
        public void AddressLine2Test()
        {
            // TODO unit test for the property 'AddressLine2'
        }
        /// <summary>
        /// Test the property 'AddressCity'
        /// </summary>
        [Fact]
        public void AddressCityTest()
        {
            // TODO unit test for the property 'AddressCity'
        }
        /// <summary>
        /// Test the property 'AddressState'
        /// </summary>
        [Fact]
        public void AddressStateTest()
        {
            // TODO unit test for the property 'AddressState'
        }
        /// <summary>
        /// Test the property 'AddressZip'
        /// </summary>
        [Fact]
        public void AddressZipTest()
        {
            // TODO unit test for the property 'AddressZip'
        }
        /// <summary>
        /// Test the property 'AddressCountry'
        /// </summary>
        [Fact]
        public void AddressCountryTest()
        {
            // TODO unit test for the property 'AddressCountry'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Company'
        /// </summary>
        [Fact]
        public void CompanyTest()
        {
            // TODO unit test for the property 'Company'
        }
        /// <summary>
        /// Test the property 'Phone'
        /// </summary>
        [Fact]
        public void PhoneTest()
        {
            // TODO unit test for the property 'Phone'
        }
        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Fact]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }
        /// <summary>
        /// Test the property 'Metadata'
        /// </summary>
        [Fact]
        public void MetadataTest()
        {
            // TODO unit test for the property 'Metadata'
        }

    }

}
