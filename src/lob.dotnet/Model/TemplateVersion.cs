/*
 * Lob
 *
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = lob.dotnet.Client.OpenAPIDateConverter;

namespace lob.dotnet.Model
{
    /// <summary>
    /// TemplateVersion
    /// </summary>
    [DataContract(Name = "template_version")]
    public partial class TemplateVersion : IEquatable<TemplateVersion>, IValidatableObject
    {
        /// <summary>
        /// Value is resource type.
        /// </summary>
        /// <value>Value is resource type.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ObjectEnum
        {
            /// <summary>
            /// Enum Version for value: version
            /// </summary>
            [EnumMember(Value = "version")]
            Version = 1
            

        }


        /// <summary>
        /// Value is resource type.
        /// </summary>
        /// <value>Value is resource type.</value>
        [DataMember(Name = "object", EmitDefaultValue = false)]
        private ObjectEnum? _object;
        public ObjectEnum? getObject() {
            return _object;
        }
        public void setObject(ObjectEnum value) {
            _object = value;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="TemplateVersion" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        public TemplateVersion() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="TemplateVersion" /> class.
        /// </summary>
        /// <param name="id">Unique identifier prefixed with &#x60;vrsn_&#x60;. (required).</param>
        /// <param name="description">An internal description that identifies this resource. Must be no longer than 255 characters. .</param>
        /// <param name="html">An HTML string of less than 100,000 characters to be used as the &#x60;published_version&#x60; of this template. See [here](#section/HTML-Examples) for guidance on designing HTML templates. Please see endpoint specific documentation for any other product-specific HTML details: - [Postcards](https://docs.lob.com/#tag/Postcards/operation/postcard_create) - &#x60;front&#x60; and &#x60;back&#x60; - [Self Mailers](https://docs.lob.com/#tag/Self-Mailers/operation/self_mailer_create) - &#x60;inside&#x60; and &#x60;outside&#x60; - [Letters](https://docs.lob.com/#tag/Letters/operation/letter_create) - &#x60;file&#x60; - [Checks](https://docs.lob.com/#tag/Checks/operation/check_create) - &#x60;check_bottom&#x60; and &#x60;attachment&#x60; - [Cards](https://docs.lob.com/#tag/Cards/operation/card_create) - &#x60;front&#x60; and &#x60;back&#x60;  If there is a syntax error with your variable names within your HTML, then an error will be thrown, e.g. using a &#x60;{{#users}}&#x60; opening tag without the corresponding closing tag &#x60;{{/users}}&#x60;.  (required).</param>
        /// <param name="engine">engine.</param>
        /// <param name="suggestJsonEditor">Used by frontend, true if the template uses advanced features. .</param>
        /// <param name="mergeVariables">Used by frontend, an object representing the keys of every merge variable present in the template. It has one key named &#39;keys&#39;, and its value is an array of strings. .</param>
        /// <param name="dateCreated">A timestamp in ISO 8601 format of the date the resource was created..</param>
        /// <param name="dateModified">A timestamp in ISO 8601 format of the date the resource was last modified..</param>
        /// <param name="deleted">Only returned if the resource has been successfully deleted..</param>
        /// <param name="_object">Value is resource type. (default to ObjectEnum.Version).</param>

        /// <summary>
        /// Unique identifier prefixed with &#x60;vrsn_&#x60;.
        /// </summary>
        /// <value>Unique identifier prefixed with &#x60;vrsn_&#x60;.</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = false)]
        private string id;
        public string getId() {
            return id;
        }
        public void setId(string value) {
            id = value;
        }

        /// <summary>
        /// An internal description that identifies this resource. Must be no longer than 255 characters. 
        /// </summary>
        /// <value>An internal description that identifies this resource. Must be no longer than 255 characters. </value>
        [DataMember(Name = "description", EmitDefaultValue = true)]
        private string description;
        public string getDescription() {
            return description;
        }
        public void setDescription(string value) {
            description = value;
        }

        /// <summary>
        /// An HTML string of less than 100,000 characters to be used as the &#x60;published_version&#x60; of this template. See [here](#section/HTML-Examples) for guidance on designing HTML templates. Please see endpoint specific documentation for any other product-specific HTML details: - [Postcards](https://docs.lob.com/#tag/Postcards/operation/postcard_create) - &#x60;front&#x60; and &#x60;back&#x60; - [Self Mailers](https://docs.lob.com/#tag/Self-Mailers/operation/self_mailer_create) - &#x60;inside&#x60; and &#x60;outside&#x60; - [Letters](https://docs.lob.com/#tag/Letters/operation/letter_create) - &#x60;file&#x60; - [Checks](https://docs.lob.com/#tag/Checks/operation/check_create) - &#x60;check_bottom&#x60; and &#x60;attachment&#x60; - [Cards](https://docs.lob.com/#tag/Cards/operation/card_create) - &#x60;front&#x60; and &#x60;back&#x60;  If there is a syntax error with your variable names within your HTML, then an error will be thrown, e.g. using a &#x60;{{#users}}&#x60; opening tag without the corresponding closing tag &#x60;{{/users}}&#x60;. 
        /// </summary>
        /// <value>An HTML string of less than 100,000 characters to be used as the &#x60;published_version&#x60; of this template. See [here](#section/HTML-Examples) for guidance on designing HTML templates. Please see endpoint specific documentation for any other product-specific HTML details: - [Postcards](https://docs.lob.com/#tag/Postcards/operation/postcard_create) - &#x60;front&#x60; and &#x60;back&#x60; - [Self Mailers](https://docs.lob.com/#tag/Self-Mailers/operation/self_mailer_create) - &#x60;inside&#x60; and &#x60;outside&#x60; - [Letters](https://docs.lob.com/#tag/Letters/operation/letter_create) - &#x60;file&#x60; - [Checks](https://docs.lob.com/#tag/Checks/operation/check_create) - &#x60;check_bottom&#x60; and &#x60;attachment&#x60; - [Cards](https://docs.lob.com/#tag/Cards/operation/card_create) - &#x60;front&#x60; and &#x60;back&#x60;  If there is a syntax error with your variable names within your HTML, then an error will be thrown, e.g. using a &#x60;{{#users}}&#x60; opening tag without the corresponding closing tag &#x60;{{/users}}&#x60;. </value>
        [DataMember(Name = "html", IsRequired = true, EmitDefaultValue = false)]
        private string html;
        public string getHtml() {
            return html;
        }
        public void setHtml(string value) {
            html = value;
        }

        /// <summary>
        /// Gets or Sets Engine
        /// </summary>
        [DataMember(Name = "engine", EmitDefaultValue = true)]
        private EngineHtml engine;
        public EngineHtml getEngine() {
            return engine;
        }
        public void setEngine(EngineHtml value) {
            engine = value;
        }

        /// <summary>
        /// Used by frontend, true if the template uses advanced features. 
        /// </summary>
        /// <value>Used by frontend, true if the template uses advanced features. </value>
        [DataMember(Name = "suggest_json_editor", EmitDefaultValue = true)]
        private bool suggestJsonEditor;
        public bool getSuggestJsonEditor() {
            return suggestJsonEditor;
        }
        public void setSuggestJsonEditor(bool value) {
            suggestJsonEditor = value;
        }

        /// <summary>
        /// Used by frontend, an object representing the keys of every merge variable present in the template. It has one key named &#39;keys&#39;, and its value is an array of strings. 
        /// </summary>
        /// <value>Used by frontend, an object representing the keys of every merge variable present in the template. It has one key named &#39;keys&#39;, and its value is an array of strings. </value>
        [DataMember(Name = "merge_variables", EmitDefaultValue = false)]
        private Object mergeVariables;
        public Object getMergeVariables() {
            return mergeVariables;
        }
        public void setMergeVariables(Object value) {
            mergeVariables = value;
        }

        /// <summary>
        /// A timestamp in ISO 8601 format of the date the resource was created.
        /// </summary>
        /// <value>A timestamp in ISO 8601 format of the date the resource was created.</value>
        [DataMember(Name = "date_created", EmitDefaultValue = false)]
        private DateTime dateCreated;
        public DateTime getDateCreated() {
            return dateCreated;
        }
        public void setDateCreated(DateTime value) {
            dateCreated = value;
        }

        /// <summary>
        /// A timestamp in ISO 8601 format of the date the resource was last modified.
        /// </summary>
        /// <value>A timestamp in ISO 8601 format of the date the resource was last modified.</value>
        [DataMember(Name = "date_modified", EmitDefaultValue = false)]
        private DateTime dateModified;
        public DateTime getDateModified() {
            return dateModified;
        }
        public void setDateModified(DateTime value) {
            dateModified = value;
        }

        /// <summary>
        /// Only returned if the resource has been successfully deleted.
        /// </summary>
        /// <value>Only returned if the resource has been successfully deleted.</value>
        [DataMember(Name = "deleted", EmitDefaultValue = true)]
        private bool deleted;
        public bool getDeleted() {
            return deleted;
        }
        public void setDeleted(bool value) {
            deleted = value;
        }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TemplateVersion {\n");
            sb.Append("  id: ").Append(id).Append("\n");
            sb.Append("  description: ").Append(description).Append("\n");
            sb.Append("  html: ").Append(html).Append("\n");
            sb.Append("  engine: ").Append(engine).Append("\n");
            sb.Append("  suggestJsonEditor: ").Append(suggestJsonEditor).Append("\n");
            sb.Append("  mergeVariables: ").Append(mergeVariables).Append("\n");
            sb.Append("  dateCreated: ").Append(dateCreated).Append("\n");
            sb.Append("  dateModified: ").Append(dateModified).Append("\n");
            sb.Append("  deleted: ").Append(deleted).Append("\n");
            sb.Append("  _object: ").Append(_object).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore });
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TemplateVersion);
        }

        /// <summary>
        /// Returns true if TemplateVersion instances are equal
        /// </summary>
        /// <param name="input">Instance of TemplateVersion to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TemplateVersion input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.id == input.getId() ||
                    (this.id != null &&
                    this.id.Equals(input.getId()))
                ) && 
                (
                    this.description == input.getDescription() ||
                    (this.description != null &&
                    this.description.Equals(input.getDescription()))
                ) && 
                (
                    this.html == input.getHtml() ||
                    (this.html != null &&
                    this.html.Equals(input.getHtml()))
                ) && 
                (
                    this.engine == input.getEngine() ||
                    (this.engine != null &&
                    this.engine.Equals(input.getEngine()))
                ) && 
                (
                    this.suggestJsonEditor == input.getSuggestJsonEditor() ||
                    this.suggestJsonEditor.Equals(input.getSuggestJsonEditor())
                ) && 
                (
                    this.mergeVariables == input.getMergeVariables() ||
                    (this.mergeVariables != null &&
                    this.mergeVariables.Equals(input.getMergeVariables()))
                ) && 
                (
                    this.dateCreated == input.getDateCreated() ||
                    (this.dateCreated != null &&
                    this.dateCreated.Equals(input.getDateCreated()))
                ) && 
                (
                    this.dateModified == input.getDateModified() ||
                    (this.dateModified != null &&
                    this.dateModified.Equals(input.getDateModified()))
                ) && 
                (
                    this.deleted == input.getDeleted() ||
                    this.deleted.Equals(input.getDeleted())
                ) && 
                (
                    this._object == input.getObject() ||
                    this._object.Equals(input.getObject())
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.id != null)
                {
                    hashCode = (hashCode * 59) + this.id.GetHashCode();
                }
                if (this.description != null)
                {
                    hashCode = (hashCode * 59) + this.description.GetHashCode();
                }
                if (this.html != null)
                {
                    hashCode = (hashCode * 59) + this.html.GetHashCode();
                }
                if (this.engine != null)
                {
                    hashCode = (hashCode * 59) + this.engine.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.suggestJsonEditor.GetHashCode();
                if (this.mergeVariables != null)
                {
                    hashCode = (hashCode * 59) + this.mergeVariables.GetHashCode();
                }
                if (this.dateCreated != null)
                {
                    hashCode = (hashCode * 59) + this.dateCreated.GetHashCode();
                }
                if (this.dateModified != null)
                {
                    hashCode = (hashCode * 59) + this.dateModified.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.deleted.GetHashCode();
                hashCode = (hashCode * 59) + this._object.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            // id (string) pattern
            Regex regexid = new Regex(@"^vrsn_[a-zA-Z0-9]+$", RegexOptions.CultureInvariant);
            if (false == regexid.Match(this.id).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for id, must match a pattern of " + regexid, new [] { "id" });
            }

            // description (string) maxLength
            if (this.description != null && this.description.Length > 255)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for description, length must be less than 255.", new [] { "description" });
            }

            // html (string) maxLength
            if (this.html != null && this.html.Length > 100000)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for html, length must be less than 100000.", new [] { "html" });
            }

            yield break;
        }
    }

}
