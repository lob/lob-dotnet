/*
 * Lob
 *
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = lob.dotnet.Client.OpenAPIDateConverter;

namespace lob.dotnet.Model
{
    /// <summary>
    /// Defines dpv_footnote
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum DpvFootnote
    {
        /// <summary>
        /// Enum AA for value: AA
        /// </summary>
        [EnumMember(Value = "AA")]
        AA = 1,

        /// <summary>
        /// Enum A1 for value: A1
        /// </summary>
        [EnumMember(Value = "A1")]
        A1 = 2,

        /// <summary>
        /// Enum BB for value: BB
        /// </summary>
        [EnumMember(Value = "BB")]
        BB = 3,

        /// <summary>
        /// Enum CC for value: CC
        /// </summary>
        [EnumMember(Value = "CC")]
        CC = 4,

        /// <summary>
        /// Enum N1 for value: N1
        /// </summary>
        [EnumMember(Value = "N1")]
        N1 = 5,

        /// <summary>
        /// Enum F1 for value: F1
        /// </summary>
        [EnumMember(Value = "F1")]
        F1 = 6,

        /// <summary>
        /// Enum G1 for value: G1
        /// </summary>
        [EnumMember(Value = "G1")]
        G1 = 7,

        /// <summary>
        /// Enum U1 for value: U1
        /// </summary>
        [EnumMember(Value = "U1")]
        U1 = 8,

        /// <summary>
        /// Enum M1 for value: M1
        /// </summary>
        [EnumMember(Value = "M1")]
        M1 = 9,

        /// <summary>
        /// Enum M3 for value: M3
        /// </summary>
        [EnumMember(Value = "M3")]
        M3 = 10,

        /// <summary>
        /// Enum P1 for value: P1
        /// </summary>
        [EnumMember(Value = "P1")]
        P1 = 11,

        /// <summary>
        /// Enum P3 for value: P3
        /// </summary>
        [EnumMember(Value = "P3")]
        P3 = 12,

        /// <summary>
        /// Enum R1 for value: R1
        /// </summary>
        [EnumMember(Value = "R1")]
        R1 = 13,

        /// <summary>
        /// Enum R7 for value: R7
        /// </summary>
        [EnumMember(Value = "R7")]
        R7 = 14,

        /// <summary>
        /// Enum RR for value: RR
        /// </summary>
        [EnumMember(Value = "RR")]
        RR = 15

    }

}
