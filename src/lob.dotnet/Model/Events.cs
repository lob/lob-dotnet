/*
 * Lob
 *
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)? 
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = lob.dotnet.Client.OpenAPIDateConverter;

namespace lob.dotnet.Model
{
    /// <summary>
    /// Events
    /// </summary>
    [DataContract(Name = "events")]
    public partial class Events : IEquatable<Events>, IValidatableObject
    {
        /// <summary>
        /// Value is resource type.
        /// </summary>
        /// <value>Value is resource type.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ObjectEnum
        {
            /// <summary>
            /// Enum Event for value: event
            /// </summary>
            [EnumMember(Value = "event")]
            Event = 1
            

        }


        /// <summary>
        /// Value is resource type.
        /// </summary>
        /// <value>Value is resource type.</value>
        [DataMember(Name = "object", IsRequired = true, EmitDefaultValue = false)]
        private ObjectEnum _object;
        public ObjectEnum getObject() {
            return _object;
        }
        public void setObject(ObjectEnum value) {
            _object = value;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="Events" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        public Events() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="Events" /> class.
        /// </summary>
        /// <param name="id">Unique identifier prefixed with &#x60;evt_&#x60;. (required).</param>
        /// <param name="body">The body of the associated resource as they were at the time of the event, i.e. the [postcard object](https://docs.lob.com/#tag/Postcards/operation/postcard_retrieve), [the letter object](https://docs.lob.com/#tag/Letters/operation/letter_retrieve), [the check object](https://docs.lob.com/#tag/Checks/operation/check_retrieve), [the address object](https://docs.lob.com/#tag/Addresses/operation/address_retrieve), or [the bank account object](https://docs.lob.com/#tag/Bank-Accounts/operation/bank_account_retrieve). For &#x60;.deleted&#x60; events, the body matches the response for the corresponding delete endpoint for that resource (e.g. the [postcard cancel response](https://docs.lob.com/#tag/Postcards/operation/postcard_delete)). (required).</param>
        /// <param name="referenceId">Unique identifier of the related resource for the event. (required).</param>
        /// <param name="eventType">eventType (required).</param>
        /// <param name="dateCreated">A timestamp in ISO 8601 format of the date the resource was created. (required).</param>
        /// <param name="_object">Value is resource type. (required) (default to ObjectEnum.Event).</param>

        /// <summary>
        /// Unique identifier prefixed with &#x60;evt_&#x60;.
        /// </summary>
        /// <value>Unique identifier prefixed with &#x60;evt_&#x60;.</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = false)]
        private string id;
        public string getId() {
            return id;
        }
        public void setId(string value) {
            id = value;
        }

        /// <summary>
        /// The body of the associated resource as they were at the time of the event, i.e. the [postcard object](https://docs.lob.com/#tag/Postcards/operation/postcard_retrieve), [the letter object](https://docs.lob.com/#tag/Letters/operation/letter_retrieve), [the check object](https://docs.lob.com/#tag/Checks/operation/check_retrieve), [the address object](https://docs.lob.com/#tag/Addresses/operation/address_retrieve), or [the bank account object](https://docs.lob.com/#tag/Bank-Accounts/operation/bank_account_retrieve). For &#x60;.deleted&#x60; events, the body matches the response for the corresponding delete endpoint for that resource (e.g. the [postcard cancel response](https://docs.lob.com/#tag/Postcards/operation/postcard_delete)).
        /// </summary>
        /// <value>The body of the associated resource as they were at the time of the event, i.e. the [postcard object](https://docs.lob.com/#tag/Postcards/operation/postcard_retrieve), [the letter object](https://docs.lob.com/#tag/Letters/operation/letter_retrieve), [the check object](https://docs.lob.com/#tag/Checks/operation/check_retrieve), [the address object](https://docs.lob.com/#tag/Addresses/operation/address_retrieve), or [the bank account object](https://docs.lob.com/#tag/Bank-Accounts/operation/bank_account_retrieve). For &#x60;.deleted&#x60; events, the body matches the response for the corresponding delete endpoint for that resource (e.g. the [postcard cancel response](https://docs.lob.com/#tag/Postcards/operation/postcard_delete)).</value>
        [DataMember(Name = "body", IsRequired = true, EmitDefaultValue = false)]
        private Object body;
        public Object getBody() {
            return body;
        }
        public void setBody(Object value) {
            body = value;
        }

        /// <summary>
        /// Unique identifier of the related resource for the event.
        /// </summary>
        /// <value>Unique identifier of the related resource for the event.</value>
        [DataMember(Name = "reference_id", IsRequired = true, EmitDefaultValue = false)]
        private string referenceId;
        public string getReferenceId() {
            return referenceId;
        }
        public void setReferenceId(string value) {
            referenceId = value;
        }

        /// <summary>
        /// Gets or Sets EventType
        /// </summary>
        [DataMember(Name = "event_type", IsRequired = true, EmitDefaultValue = false)]
        private EventType eventType;
        public EventType getEventType() {
            return eventType;
        }
        public void setEventType(EventType value) {
            eventType = value;
        }

        /// <summary>
        /// A timestamp in ISO 8601 format of the date the resource was created.
        /// </summary>
        /// <value>A timestamp in ISO 8601 format of the date the resource was created.</value>
        [DataMember(Name = "date_created", IsRequired = true, EmitDefaultValue = false)]
        private DateTime dateCreated;
        public DateTime getDateCreated() {
            return dateCreated;
        }
        public void setDateCreated(DateTime value) {
            dateCreated = value;
        }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class Events {\n");
            sb.Append("  id: ").Append(id).Append("\n");
            sb.Append("  body: ").Append(body).Append("\n");
            sb.Append("  referenceId: ").Append(referenceId).Append("\n");
            sb.Append("  eventType: ").Append(eventType).Append("\n");
            sb.Append("  dateCreated: ").Append(dateCreated).Append("\n");
            sb.Append("  _object: ").Append(_object).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore });
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Events);
        }

        /// <summary>
        /// Returns true if Events instances are equal
        /// </summary>
        /// <param name="input">Instance of Events to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Events input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.id == input.getId() ||
                    (this.id != null &&
                    this.id.Equals(input.getId()))
                ) && 
                (
                    this.body == input.getBody() ||
                    (this.body != null &&
                    this.body.Equals(input.getBody()))
                ) && 
                (
                    this.referenceId == input.getReferenceId() ||
                    (this.referenceId != null &&
                    this.referenceId.Equals(input.getReferenceId()))
                ) && 
                (
                    this.eventType == input.getEventType() ||
                    (this.eventType != null &&
                    this.eventType.Equals(input.getEventType()))
                ) && 
                (
                    this.dateCreated == input.getDateCreated() ||
                    (this.dateCreated != null &&
                    this.dateCreated.Equals(input.getDateCreated()))
                ) && 
                (
                    this._object == input.getObject() ||
                    this._object.Equals(input.getObject())
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.id != null)
                {
                    hashCode = (hashCode * 59) + this.id.GetHashCode();
                }
                if (this.body != null)
                {
                    hashCode = (hashCode * 59) + this.body.GetHashCode();
                }
                if (this.referenceId != null)
                {
                    hashCode = (hashCode * 59) + this.referenceId.GetHashCode();
                }
                if (this.eventType != null)
                {
                    hashCode = (hashCode * 59) + this.eventType.GetHashCode();
                }
                if (this.dateCreated != null)
                {
                    hashCode = (hashCode * 59) + this.dateCreated.GetHashCode();
                }
                hashCode = (hashCode * 59) + this._object.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            // id (string) pattern
            Regex regexid = new Regex(@"^evt_[a-zA-Z0-9_]+$", RegexOptions.CultureInvariant);
            if (false == regexid.Match(this.id).Success)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for id, must match a pattern of " + regexid, new [] { "id" });
            }

            yield break;
        }
    }

}
