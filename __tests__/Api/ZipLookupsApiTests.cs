/*
 * Lob
 *
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using NUnit.Framework;

using Moq;

using lob.dotnet.Client;
using lob.dotnet.Api;
using lob.dotnet.Model;

namespace __tests__.Api
{
    /// <summary>
    ///  Class for testing ZipLookupsApi
    /// </summary>
    [TestFixture]
    [Category("Unit")]
    [Parallelizable(scope: ParallelScope.All)]
    public class ZipLookupsApiTests : IDisposable
    {
        private Mock<IZipLookupsApi> zipLookupsApiMock;

        public ZipLookupsApiTests()
        {
            zipLookupsApiMock = new Mock<IZipLookupsApi>();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test Successful Lookup
        /// </summary>
        [Test]
        public void LookupTest200() {
            Zip fakeZipObject = new Zip(
                default(string), // zipCode
                "us_zip_fakeId", // id
                new List<ZipLookupCity>(), // cities
                default(ZipCodeType), // zipCodeType
                Zip.ObjectEnum.UsZipLookup // _object
            );

            ZipEditable zipEditable = new ZipEditable("94107");
            zipLookupsApiMock.Setup(x => x.lookup(zipEditable, It.IsAny<int>())).Returns(fakeZipObject);
            Zip response = zipLookupsApiMock.Object.lookup(zipEditable);

            Assert.IsInstanceOf<Zip>(response);
            Assert.AreEqual(response.Id, fakeZipObject.Id);
            Assert.AreEqual(response.Cities.Count, fakeZipObject.Cities.Count);
        }

        /// <summary>
        /// Test LookupHandlesException
        /// </summary>
        [Test]
        public void LookupTestHandlesException() {
            ApiException fakeException = new ApiException(
                402,
                "This is an error"
            );

            try {
                zipLookupsApiMock.Setup(x => x.lookup(null, It.IsAny<int>())).Throws(fakeException);
            } catch (Exception e) {
                Assert.IsInstanceOf<ApiException>(e);
                Assert.AreEqual(e.Message, fakeException.Message);
            }
        }
    }
}
