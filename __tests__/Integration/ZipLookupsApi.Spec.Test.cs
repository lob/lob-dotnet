/*
 * Lob
 *
 * The Lob API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and uses HTTP response codes to indicate any API errors. <p> Looking for our [previous documentation](https://lob.github.io/legacy-docs/)?
 *
 * The version of the OpenAPI document: 1.3.0
 * Contact: lob-openapi@lob.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using lob.dotnet.Client;
using lob.dotnet.Api;
using lob.dotnet.Model;
using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.Linq;

namespace __tests__.Integration {
    [TestFixture]
    [Parallelizable(scope: ParallelScope.Self)]
    public class ZipLookupsApiTests : IDisposable
    {
        private ZipLookupsApi validApi;
        private ZipLookupsApi invalidApi;
        private ZipEditable zipEditable;

        public ZipLookupsApiTests()
        {
            Configuration config = new Configuration();
            Configuration invalidConfig = new Configuration();

            DotNetEnv.Env.TraversePath().Load();
            config.Username= System.Environment.GetEnvironmentVariable("LOB_API_TEST_KEY");
            invalidConfig.Username = "fake api key";

            validApi = new ZipLookupsApi(config);
            invalidApi = new ZipLookupsApi(invalidConfig);

            zipEditable = new ZipEditable("94107");
        }

        public void Dispose() {}

        [Test]
        public void LookupTest200() {
            Zip zipObject = validApi.lookup(zipEditable);
            Assert.That(zipObject.Id, Does.Contain("us_zip_"));
            Assert.GreaterOrEqual(zipObject.Cities.Count, 1);
        }

        [Test]
        public void LookupTest0() {
          try {
            Zip zipObject = validApi.lookup(null);
            Assert.Fail("Zip lookup with invalid number of arguments");
          } catch (Exception e) {
            Assert.IsInstanceOf<ApiException>(e);
            Assert.That(e.Message, Does.Contain("Missing required parameter"));
          }
        }

        [Test]
        public void LookupTest401() {
          try {
            Zip zipObject = invalidApi.lookup(zipEditable);
            Assert.Fail("Reverse geocode lookup with invalid API key");
          } catch (Exception e) {
            Assert.IsInstanceOf<ApiException>(e);
            Assert.That(e.Message, Does.Contain("Your API key is not valid"));
          }
        }
    }
}